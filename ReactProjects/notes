React JS

* its View Layer
* Virtual DOM Support
* Component based architecture
* Performance based UI Application
* Server side rendering
* JSX- javascript and xml   .jsx or .tsx


f1.html
<form method=post>
    <input type="text"> 
    <button>OK</button>
    <h1>Welcome,Raj</h1>
</form>
React Role - 
Virutal DOM
<form method=post>
    <input type="text" value="Raj"> 
    <button>OK</button>
    <h1>Welcome,Raj</h1>
</form>



React Project setup:
step 1: install react template
command: npm install -g create-react-app

step 2: create react project
command: npx create-react-app projectname
note: project name should be small letters

step 3: how to run react app
command: npm start


React Components:
1. Class component
    *Statefull component
    *it will follow component life cycle
2. Functional component
    *Stateless component
    *No life cycle

What is component?
    *A unit of html, css and javascript logic

Component access rules?
*Comonent name starting letter capital
*Every component must be exported
*Before call the component, it should be imported
*Should call component as a tag


Props:
*Can pass data one to another component
*Its read-only. cannot modified
*Can be used in function and class component

State:
*Can acccess only in the class component
*State value can be modified


class Component:
*its statefull component
*it will follow the life cycle methods in every change
 in the component

 --Life cycle methods
 1. Mounting
        *constructor()
        *render()
        *componentDidMount()
 2. Updating
        *setState(), props, forceUpdate()
        *render()
        *componentDidUpdate()
 3. UnMounting
        *componentWillUnMount()


React Routing setup:

Step 1:
npm install react-router-dom

step 2:
create navbar/menubar using <Link> component
Example:  <Link to={"/movies"}> Movies </Link>

step 3:
setup <Routes> component to handle all the route component

step 4:
setup <Route> component inside the <Routes> component
Route will be checking the path and element/component.
Example:
if Route path is "/movies"
then render element <MoviesComponent>
<Routes>
    <Route path="/movies" element={<MoviesComponent />} />
</Routes>

step 5:
setup <BrowserRouter> component in the root component
to handle all the browser routes


how to access params in the class?
import queryString from 'query-string';
...
const queryStringParams = queryString.parse(window.location.search);


React Hooks:
********************
React Hooks are like special tools that make it easier to add features to your function components, without the need for complex class components. They help you manage state, deal with component updates, and share logic across your app in a simpler way

1. useState()
    syntax: const[statevariable,statemethod]=useState(initialValue);
    example: const[a,setA]=useState(10);
    setA(20);    // a value is 20
2. useEffect()
     if useState method is trigger then useEffect will call automatically
3. useContext()
4. useParams()
5. useLocation()
6. useReducer()
7. useNavigate()
8. useCallBack()
9. useMemo()

 const location = useLocation();
    var searchParams=new URLSearchParams(location.search);
    const {id}=useParams();
    const query = searchParams.get('id');